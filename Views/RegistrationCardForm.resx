<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIBgAAAEAIACIDAAAFgAAACgAAAAgAAAAMAAAAAEAIAAAAAAAAAwAADjsAAA47AAAAAAAAAAA
        AACekJVenpCV8p6Qlf+ekJX+npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Q
        lf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/p6Q
        lf+ekJXynpCVXp6QleuekJX/npCV7p6Qle6ekJXunpCV7p6Qle6ekJXunpCV7p6Qle6ekJXunpCV7p6Q
        le6ekJXunpCV756Qle+ekJXvnpCV756Qle+ekJXvnpCV756Qle+ekJXvnpCV756Qle+ekJXvnpCV756Q
        le+ekJXunpCV756Qlf+ekJXrnpCV/56Qle6ekJUgnpCVDJ6QlRGekJUQnpCVEJ6QlRCekJUQnpCVEJ6Q
        lRCekJUQnpCVEJ6QlRCekJURnpCVEZ6QlRGekJURnpCVEZ6QlRGekJURnpCVEZ6QlRGekJURnpCVEZ6Q
        lRGekJURnpCVEp6QlQ2ekJUgnpCV7p6Qlf+ekJX/npCV7p6QlRCekJUAnpCVAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACekJUBnpCVAJ6QlRCekJXunpCV/56Qlf+ekJXunpCVEp6QlQCdjpQCrZ6jAXFk
        aQJKP0MFXlNXAjgtMQA4LTEAXlNXAko/QwVxZGkCrZ6jAZuNkgGdj5QBpZecAX1wdAJmWl8CaFxgAmhc
        YAJoXGACaFxgAmhcYAJoXGACZlpfAop9gQOcjpMAnpCVEZ6Qle6ekJX/npCV/56Qle6ekJUQn5GWAMKz
        uAEwJioCMCYqAjAmKgAxJSkAMCYqDTAmKg0xJSkAMCYqADAmKgIwJioCMCYqADAmKgAwJioAMCYqATAm
        KgAwJioAAAAAAAAAAAAAAAAAAAAAADAmKgAwJioAaV1hAqqcoQCfkZYQnpCV7p6Qlf+ekJX/npCV7p6Q
        lRGZjJEAX1NYAzAmKgAwJioKMCYqbzAmKsgwJirtMCYq7TAmKskwJipvMCYqCjAmKQAwJioCLyYrADAm
        KgAwJioFMCYqETAmKhAwJioQMCYqEDAmKhAwJioQMCYqEDAmKhFEOj4Gi32CAJyPlBGekJXunpCV/56Q
        lf+ekJXunpCVENbHzAAFAAEAMCYqHjAmKs8wJir/MCYq/jAmKvgwJir4MCYq/jAmKv8wJirPMCYqHjAm
        KgAwJioBMCcqAjAmKsEwJir7MCYq8DAmKvIwJiryMCYq8jAmKvIwJirwMCYq+zEnK8P//v8ApJabD56Q
        le+ekJX/npCV/56Qle6Zi5ARgHN4AD0zNwkwJirLMCYq/zAmKtAwJipKMCYqFDAmKhUwJipKMCYqzzAm
        Kv8wJirLMCYqCTAmKgAwJioDMCYqwzAmKvwwJirxMCYq8zAmKvMwJirzMCYq8zAmKvEwJir8MScrw/3s
        8QCklpsQnpCV756Qlf+ekJX/npCV7op9gRRIPUEAMScrcTAmKv8wJirOMCYqEDAmKgAwJioBMCYqATAm
        KgAwJioQMCYqzzAmKv8wJipwMCYqADAmKgMwJioEMCYqDDAmKgwwJioMMCYqDDAmKgwwJioMMCYqDDAm
        KgxLQEQFkIKHAJ2PlBGekJXunpCV/56Qlf+ekJXumIqPEWFWWgAxJyvFMCYq/zAmKk4wJioAMCYqBzAm
        KgEwJioBMCYqBzAmKgAwJipPMCYq/zAmKsQwJioAMCYpADAmKgQwJioMMCYqDDAmKgwwJioMMCYqDDAm
        KgwwJioMMCYqDEtARAWQgocAnY+UEZ6Qle6ekJX/npCV/56Qle++r7QNAAAACDEnK+0wJir4MCYqGDAm
        KgAwJioBMCYqADAmKgAwJioBMCYqADAmKhgwJir4MCYq7DAmKgwwJSoAMCYqwzAmKvwwJirxMCYq8zAm
        KvMwJirzMCYq8zAmKvEwJir8MScrxP/2/ACklpsQnpCV756Qlf+ekJX/npCV776vtA0AAAAIMScr7TAm
        KvgwJioYMCYqADAmKgEwJioAMCYqADAmKgEwJioAMCYqGDAmKvgwJirsMCYqDDEmKQAwJirEMCYq/DAm
        KvEwJirzMCYq8zAmKvMwJirzMCYq8TAmKvwxJyvD/OrwAKOVmhCekJXvnpCV/56Qlf+ekJXumIqPEWJW
        WgAxJyvFMCYq/zAmKk4wJioAMCYqBzAmKgEwJioBMCYqBzAmKgAwJipPMCYq/zAmKsQwJioAMCYqADAm
        KgQwJioMMCYqDDAmKgwwJioMMCYqDDAmKgwwJioMMCYqDEtARAWQgocAnY+UEZ6Qle6ekJX/npCV/56Q
        le6KfIEUSD1BADEnK3EwJir/MCYqzjAmKhAwJioAMCYqATAmKgEwJioAMCYqEDAmKs8wJir/MCYqcDAm
        KgAwJioDMCYqBDAmKgwwJioMMCYqDDAmKgwwJioMMCYqDDAmKgwwJioMS0BEBZCChwCdj5QRnpCV7p6Q
        lf+ekJX/npCV7pmLkBF/c3cAPTM3CjAmKsswJir/MCYqzzAmKkowJioUMCYqFDAmKkowJirPMCYq/zAm
        KsswJioJMCYqADAmKgMwJirCMCYq/DAmKvEwJirzMCYq8zAmKvMwJirzMCYq8TAmKvwxJyvE//b8AKSW
        mxCekJXvnpCV/56Qlf+ekJXunpCVENjIzQAGAAEAMCYqHjAmKs8wJir/MCYq/jAmKvgwJir4MCYq/jAm
        Kv8wJirPMCYqHjAmKgAwJioBMCYqAjAmKsIwJir7MCYq8DAmKvIwJiryMCYq8jAmKvIwJirwMCYq+zEn
        K8P/8PYApJabEJ6Qle+ekJX/npCV/56Qle6ekJUQmoyRAF9TWAMwJioAMCYqCjAmKm8wJirJMCYq7jAm
        Ku4wJirJMCYqbzAmKgowJioAMCYqAjAmKgAwJioAMCYqBTAmKhEwJioQMCYqEDAmKhAwJioQMCYqEDAm
        KhAwJioRRTo+Bot+gwCdjpQRnpCV7p6Qlf+ekJX/npCV7p6QlRCfkZYAw7O5ATAmKgIwJioCMCYqADEl
        KwAwJioNMCYqDTElKgAwJioAMCYqAjAmKgIwJioAMCYqADAmKgAwJioBMCYqADAmKgAAAAAAAAAAAAAA
        AAAAAAAAMCYqADAmKgBpXWECq5yiAJ+QlhCekJXunpCV/56Qlf+ekJXunpCVEZ6QlQCdj5QCrZ6jAXFl
        aQJKP0MFX1RYAjgtMQA4LTEAYFRZAko/QwVxZWkCrZ6jAZuNkgGdj5QBpZecAXxvdAJlWl4CZ1tgAmdb
        YAJnW18CZ1tfAmdbYAJnW2ACZVpeAop9gQOcjpMAnpCVEp6Qle6ekJX/npCV/56Qle6ekJUQnpCVAJ6Q
        lQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnpCVAZ6QlQCekJUQnpCV7p6Qlf+ekJX/npCV7p6Q
        lSCekJUNnpCVEp6QlRGekJURnpCVEZ6QlRGekJURnpCVEZ6QlRGekJURnpCVEZ6QlRGekJURnpCVEZ6Q
        lRGekJUQnpCVEJ6QlRCekJUQnpCVEJ6QlRCekJUQnpCVEJ6QlRCekJURnpCVDJ6QlSCekJXunpCV/56Q
        leuekJX/npCV756Qle6ekJXvnpCV756Qle+ekJXvnpCV756Qle+ekJXvnpCV756Qle+ekJXvnpCV756Q
        le+ekJXvnpCV756Qle6ekJXunpCV7p6Qle6ekJXunpCV7p6Qle6ekJXunpCV7p6Qle6ekJXunpCV7p6Q
        lf+ekJXrnpCVXp6QlfKekJX/npCV/p6Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Q
        lf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Qlf+ekJX/npCV/56Q
        lf6ekJX/npCV8p6QlV4AAAAAAAAAAAAAAAAX///oEGAACBEJl6gUAkAIGAEACBAAgAgQkIAIEQiACAEI
        QAgBCEAIEQiACBCQgAgQAIAIGAEACBQCQAgRCZeoEGAACBf//+gAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>